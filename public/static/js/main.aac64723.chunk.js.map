{"version":3,"sources":["services/api/storage/index.ts","modules/shared/Layout/Layout.module.scss","modules/shared/Layout/Header/Header.module.scss","features/signUpUser/view/SignUpUser.module.scss","services/api/storage/LocalStorage.ts","services/api/storage/MemoryStorage.ts","features/manageUsers/view/ManageUsers/ManageUsers.module.scss","features/chat/view/ChatMessage/ChatMessage.module.scss","modules/Main/view/MainLayout.module.scss","features/signInUser/view/SignInUser.module.scss","modules/Auth/view/UnauthorizedLayout/UnauthorizedLayout.module.scss","features/profile/view/Profile.module.scss","modules/shared/AuthChecker/AuthChecker.module.scss","shared/types/app.ts","modules/Main/routes.ts","modules/Users/routes.ts","modules/Auth/routes.ts","modules/Profile/routes.ts","modules/routes.ts","core/config.ts","services/api/HttpActions.ts","services/api/errors/ApiError.ts","services/api/entities/BaseApi.ts","shared/types/guards.ts","services/api/errors/isErrorStatus.ts","services/api/converters/users.ts","services/api/entities/Users.ts","services/api/converters/auth.ts","services/api/entities/Auth.ts","services/api/sockets/Socket.ts","services/api/Api.ts","services/api/context.tsx","utils/hooks/useApi.ts","services/auth/context.tsx","utils/hooks/useToken.ts","modules/shared/ProtectedRoute/ProtectedRoute.tsx","features/manageUsers/view/ManageUsers/ManageUsers.tsx","modules/shared/Layout/Header/Header.tsx","modules/shared/Layout/Layout.tsx","modules/Users/view/UsersLayout.tsx","modules/Users/Users.tsx","shared/view/components/TextInput/TextInput.tsx","shared/view/fields/TextInputField/TextInputField.tsx","shared/helpers/getFieldWithComponent.tsx","features/chat/view/ChatMessage/ChatMessage.tsx","features/chat/view/Chat/Chat.tsx","modules/Main/view/MainLayout.tsx","modules/Main/Main.tsx","shared/validators/isRequired.ts","shared/validators/composeValidators.ts","features/signInUser/view/SignInUser.tsx","modules/Auth/view/SignInLayout/SignInLayout.tsx","features/signUpUser/view/SignUpUser.tsx","modules/Auth/view/SignUpLayout/SignUpLayout.tsx","modules/Auth/view/UnauthorizedLayout/UnauthorizedLayout.tsx","modules/Auth/Auth.tsx","features/profile/view/Profile.tsx","modules/Profile/view/ProfileLayout.tsx","modules/Profile/Profile.tsx","core/App.tsx","modules/shared/AuthChecker/AuthChecker.tsx","core/configureServiceWorker.ts","index.tsx","core/Core.tsx","features/chat/view/Chat/Chat.module.scss"],"names":["module","exports","LocalStorage","isLocalStorageAvailable","this","checkAvailability","localStorage","setItem","removeItem","e","console","error","key","item","JSON","stringify","def","result","data","getItem","parse","MemoryStorage","Module","MAIN","USERS","SIGN_UP","SIGN_IN","AUTH_ERROR","PROFILE","routes","mainRoutes","userRoutes","authRoutes","profileRoutes","dotenv","CONFIG","baseUrl","process","BASE_URL","socketsPort","SOCKETS_PORT","HttpActions","baseURL","headers","request","isRefreshing","axios","create","withCredentials","url","options","config","get","post","patch","delete","put","refreshTokenInterceptor","interceptors","response","use","status","catch","finally","ApiError","params","message","Error","BaseApi","actions","storage","t","set","Authorization","token","converter","responseData","Boolean","isErrorStatus","convertServerUser","user","id","_id","name","surname","email","convertServerUsers","users","map","x","Users","setHeaders","handleResponse","userId","body","del","autobind","convertServerAuth","tokens","accessToken","refreshToken","Auth","Socket","io","connect","transports","port","on","info","emit","fromEvent","disconnect","Api","socket","auth","initInterceptors","ApiContext","React","createContext","ApiContextProvider","children","api","Provider","value","useApi","useContext","AuthContext","AuthContextProvider","getToken","setToken","resetToken","isMounted","useMountedState","isLoadingRequired","useState","isLoading","setIsLoading","setError","setUser","a","updateTokens","signInByToken","u","useAsync","initAuthInterceptors","setAuth","resetAuth","PrivateRoute","component","location","routeProps","Component","undefined","pathname","render","to","Text","Typography","ManageUsers","history","useHistory","setUsers","fetchUsers","useCallback","getUsers","i","deleteUser","makeDeleteUserHandler","columns","title","dataIndex","_","record","type","onClick","push","useEffect","className","styles","UsersWrapper","dataSource","loading","bordered","menuItems","route","Header","useLocation","activeTab","setActiveTab","selectedKeys","mode","Item","Button","Layout","withFooter","Wrapper","Content","Footer","UsersLayout","UsersModule","path","exact","TextInput","password","rest","Password","TextInputField","props","displayName","getFieldWithComponent","input","meta","touched","ChatMessage","Chat","isRollUp","setIsRollUp","messages","setMessages","init","onMessage","subscribe","m","state","Window","onSubmit","values","sendMessage","content","sender","handleSubmit","autoComplete","cn","SlideUp","SlideDown","InputWrapper","placeholder","htmlType","subscription","MainLayout","MainModule","makeRequired","errorMsg","composeValidators","validators","reduce","validator","SignIn","signIn","SignInForm","onFinish","validate","SignInLayout","SignUp","signUp","SignUpForm","SignUpLayout","UnauthorizedLayout","AuthModule","Profile","useParams","newPassword","isOwnProfile","fetchUserProfile","getUser","usr","updateProfile","updateUser","ProfileForm","initialValues","ProfileLayout","ProfileModule","App","AuthChecker","size","window","hostname","match","ReactDOM","Object","modules","getRoutes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aac64723.chunk.js","sourcesContent":["export { LocalStorage } from './LocalStorage';\nexport { MemoryStorage } from './MemoryStorage';\nexport * from './types';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Layout_Wrapper__3uO9p\",\"Content\":\"Layout_Content__1FFbA\",\"Footer\":\"Layout_Footer__20rqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Header_Button__HX-KD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignUpForm\":\"SignUpUser_SignUpForm__3Od4a\",\"SubmitButton\":\"SignUpUser_SubmitButton__823qS\"};","import { Storage } from './types';\n\nclass LocalStorage implements Storage {\n  public static checkAvailability() {\n    const testKey = '__test__';\n\n    try {\n      localStorage.setItem(testKey, '__test-value__');\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  private isLocalStorageAvailable: boolean | null = null;\n\n  constructor() {\n    this.isLocalStorageAvailable = LocalStorage.checkAvailability();\n  }\n\n  public set<T>(key: string, item: T): void {\n    if (!this.isLocalStorageAvailable) {\n      return;\n    }\n\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n\n  public get<T, D>(key: string, def: D): T | D {\n    let result: T | D = def;\n    if (!this.isLocalStorageAvailable) {\n      return result;\n    }\n\n    const data = localStorage.getItem(key);\n\n    try {\n      result = data ? (JSON.parse(data) as T) : def;\n    } catch (e) {\n      console.error(e);\n    }\n\n    return result;\n  }\n\n  public del(key: string) {\n    if (!this.isLocalStorageAvailable) {\n      return;\n    }\n    localStorage.removeItem(key);\n  }\n}\n\nexport { LocalStorage };\n","import { Storage } from './types';\n\nclass MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  public set<T>(key: string, item: T): void {\n    this.data[key] = JSON.stringify(item);\n  }\n\n  public get<T, D>(key: string, def: D): T | D {\n    const result = this.data[key] || null;\n    const parsed = result ? (JSON.parse(result) as T) : def;\n\n    return parsed;\n  }\n\n  public del(key: string) {\n    delete this.data[key];\n  }\n}\n\nexport { MemoryStorage };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersWrapper\":\"ManageUsers_UsersWrapper__3LuPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ChatMessage_Wrapper__3RCRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MainLayout_Wrapper__3_gRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignInForm\":\"SignInUser_SignInForm__3yhMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"UnauthorizedLayout_Wrapper__3d0om\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileForm\":\"Profile_ProfileForm__1Yh2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AuthChecker_Wrapper__30FrR\"};","import { ReactElement } from 'react';\nimport { RouteProps } from 'react-router';\n\nexport abstract class Module {\n  public getRoutes?(): ReactElement<RouteProps> | Array<ReactElement<RouteProps>>;\n}\n\nexport type AppData = {\n  modules: Module[];\n};\n","export const MAIN = '/';\n","export const USERS = '/users';\n","export const SIGN_UP = '/sign-up';\nexport const SIGN_IN = '/sign-in';\nexport const AUTH_ERROR = '/auth-error';\n","export const PROFILE = '/profile';\n","import * as mainRoutes from './Main/routes';\nimport * as userRoutes from './Users/routes';\nimport * as authRoutes from './Auth/routes';\nimport * as profileRoutes from './Profile/routes';\n\nexport const routes = {\n  mainRoutes, userRoutes, authRoutes, profileRoutes,\n};\n","import * as dotenv from 'dotenv';\n\n/**\n * Load environment variables from .env file.\n */\ndotenv.config();\n\nexport const CONFIG = {\n  baseUrl: process.env.BASE_URL || 'https://localhost:8080',\n  socketsPort: process.env.SOCKETS_PORT || '8081',\n};\n","import axios, { AxiosInstance, AxiosRequestConfig, AxiosPromise } from 'axios';\n\nimport { InterceptorErrorResponse, HttpActionParams, Interceptors } from './types';\n\nclass HttpActions {\n  private request: AxiosInstance;\n  private isRefreshing: boolean = false;\n\n  constructor(baseURL: string, headers?: AxiosRequestConfig['headers']) {\n    this.request = axios.create({\n      baseURL,\n      headers,\n      withCredentials: false,\n    });\n  }\n\n  public get<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    const config: AxiosRequestConfig = {\n      data, ...options,\n    };\n    return this.request.get(url, config);\n  }\n\n  public post<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    return this.request.post(url, data, options);\n  }\n\n  public patch<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    return this.request.patch(url, data, options);\n  }\n\n  public del<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    const config: AxiosRequestConfig = {\n      url, data, ...options,\n    };\n    return this.request.delete(url, config);\n  }\n\n  public put<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    return this.request.put(url, data, { ...options });\n  }\n\n  public initInterceptors({ refreshTokenInterceptor }: Interceptors) {\n    this.request.interceptors.response.use(\n      response => response,\n      (error: InterceptorErrorResponse) => {\n        const { response } = error;\n\n        if (response.status === 401 && !this.isRefreshing) {\n          this.isRefreshing = true;\n          refreshTokenInterceptor().catch(e => e).finally(() => {\n            this.isRefreshing = false;\n          });\n        }\n\n        return error;\n      },\n    );\n  }\n}\n\nexport { HttpActions };\n","import { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nexport type Params = {\n  config: AxiosRequestConfig;\n  status: number;\n  request: XMLHttpRequest;\n  response: AxiosResponse;\n};\n\nexport class ApiError extends Error {\n  public config: AxiosRequestConfig;\n  public status: number;\n  public request: XMLHttpRequest;\n  public response: any;\n\n  constructor(params: Params) {\n    const { config, status, request, response } = params;\n    super(response.data.message);\n    this.config = config;\n    this.status = status;\n    this.request = request;\n    this.response = response;\n  }\n}\n","import { AxiosResponse } from 'axios';\n\nimport { isDataResponse } from 'shared/types/guards';\n\nimport { HttpActions } from '../HttpActions';\nimport { Storage } from '../storage';\nimport { Converter } from '../types';\nimport { isErrorStatus } from '../errors/isErrorStatus';\nimport { ApiError } from '../errors/ApiError';\n\nclass BaseApi {\n  protected actions: HttpActions;\n  protected storage: Storage;\n\n  get token() {\n    return this.storage.get<string, null>('token', null);\n  }\n\n  set token(t: string | null) {\n    this.storage.set('token', t);\n  }\n\n  get refreshToken() {\n    return this.storage.get<string, null>('refreshToken', null);\n  }\n\n  set refreshToken(t: string | null) {\n    this.storage.set('refreshToken', t);\n  }\n\n  constructor(actions: HttpActions, storage: Storage) {\n    this.actions = actions;\n    this.storage = storage;\n  }\n\n  protected setHeaders() {\n    return { headers: { Authorization: this.token } };\n  }\n\n  protected static handleResponse<ResponseData, Result>(\n    response: AxiosResponse,\n    converter?: Converter<ResponseData, Result> | null,\n  ): Result {\n    const responseData = (() => {\n      if (isDataResponse<ResponseData>(response.data)) {\n        return response.data.data;\n      }\n      return response.data;\n    })();\n    if (isErrorStatus(response.status)) {\n      const { config, status, request } = response;\n      throw new ApiError({\n        config,\n        status,\n        request,\n        response,\n      });\n    }\n    if (converter) {\n      return converter(responseData as ResponseData);\n    }\n    return responseData;\n  }\n}\n\nexport { BaseApi };\n","import { DataResponse } from 'services/api/types';\n\nexport function isDataResponse<R>(data: any): data is DataResponse<R> {\n  return Boolean(data.data);\n}\n","export function isErrorStatus(status: number): boolean {\n  return status >= 400 && status <= 503;\n}\n","import { User } from 'shared/types/models';\n\nimport { UserResponse, UsersResponse } from '../types/models/user';\n\nexport function convertServerUser({ user }: UserResponse): User {\n  return {\n    id: user._id,\n    name: user.name,\n    surname: user.surname,\n    email: user.email,\n  };\n}\n\nexport function convertServerUsers({ users }: UsersResponse): User[] {\n  return users.map(x => convertServerUser({ user: x }));\n}\n","import { autobind } from 'core-decorators';\n\nimport { User } from 'shared/types/models';\n\nimport { BaseApi } from './BaseApi';\nimport { UsersResponse, UserResponse } from '../types/models/user';\nimport { convertServerUser, convertServerUsers } from '../converters/users';\n\nclass Users extends BaseApi {\n  @autobind\n  public async getUsers() {\n    const response = await this.actions.get<UsersResponse>({\n      url: '/users', options: this.setHeaders(),\n    });\n    return Users.handleResponse(response, convertServerUsers);\n  }\n\n  @autobind\n  public async getUser(userId: string) {\n    const response = await this.actions.get<UserResponse>({\n      url: `/users/${userId}`, options: this.setHeaders(),\n    });\n    return Users.handleResponse(response, convertServerUser);\n  }\n\n  @autobind\n  public async updateUser(userId: string, body: User & { password?: string, newPassword?: string }) {\n    const response = await this.actions.put<UserResponse>({\n      url: `/users/${userId}`, data: body, options: this.setHeaders(),\n    });\n    return Users.handleResponse(response, convertServerUser);\n  }\n\n  @autobind\n  public async deleteUser(userId: string) {\n    const response = await this.actions.del<UserResponse>({\n      url: `/users/${userId}`,\n      options: this.setHeaders(),\n    });\n    return Users.handleResponse(response, convertServerUser);\n  }\n}\n\nexport { Users };\n","import { AuthUser } from 'shared/types/models';\n\nimport { AuthResponse } from '../types/models/auth';\n\nexport function convertServerAuth({ user, token }: AuthResponse): AuthUser {\n  return {\n    data: {\n      id: user._id,\n      name: user.name,\n      surname: user.surname,\n      email: user.email,\n    },\n    tokens: {\n      accessToken: token.accessToken,\n      refreshToken: token.refreshToken,\n    },\n  };\n}\n","import { autobind } from 'core-decorators';\n\nimport { RegisterUser } from 'shared/types/models';\n\nimport { BaseApi } from './BaseApi';\nimport { AuthResponse, TokenResponse } from '../types/models/auth';\nimport { convertServerAuth } from '../converters/auth';\n\nclass Auth extends BaseApi {\n  @autobind\n  public async signUp(data: RegisterUser) {\n    await this.actions.post<AuthResponse>({\n      url: '/register', data,\n    });\n  }\n\n  @autobind\n  public async signIn(data: { email: string; password: string }) {\n    const response = await this.actions.post<AuthResponse>({\n      url: '/authenticate', data,\n    });\n    return Auth.handleResponse(response, convertServerAuth);\n  }\n\n  @autobind\n  public async signInByToken() {\n    const response = await this.actions.get<AuthResponse>({\n      url: '/token-authenticate', options: this.setHeaders(),\n    });\n    return Auth.handleResponse(response, convertServerAuth);\n  }\n\n  @autobind\n  public async updateTokens() {\n    const response = await this.actions.post<{ token: TokenResponse }>({\n      url: '/authenticate/refresh',\n      options: this.setHeaders(),\n      data: { refreshToken: this.refreshToken },\n    });\n    return Auth.handleResponse(response, (data: { token: TokenResponse }) => data.token);\n  }\n}\n\nexport { Auth };\n","import io from 'socket.io-client';\nimport { autobind } from 'core-decorators';\nimport { fromEvent, Observable } from 'rxjs';\n\nimport { Message } from 'shared/types/models';\n\nimport { MessageResponse } from '../types/models/message';\n\n// import { CONFIG } from 'core/config';\n\nexport class Socket {\n  private io: SocketIOClient.Socket = {} as SocketIOClient.Socket;\n\n  @autobind\n  public init() {\n    this.io = io.connect('http://localhost:8081/', {\n      transports: ['websocket'],\n      port: '8081',\n    });\n    this.io.on('connect', () => console.info('Socket connected'));\n    this.io.on('disconnect', () => console.info('Socket disconnected'));\n  }\n\n  @autobind\n  public sendMessage(message: Message) {\n    this.io.emit('message', message);\n  }\n\n  @autobind\n  public onMessage(): Observable<MessageResponse> {\n    return fromEvent(this.io, 'message');\n  }\n\n  @autobind\n  public disconnect() {\n    this.io.disconnect();\n  }\n}\n","import { CONFIG } from 'core/config';\n\nimport { HttpActions } from './HttpActions';\nimport { Users } from './entities/Users';\nimport { Storage } from './storage';\nimport { Auth } from './entities/Auth';\nimport { Interceptors } from './types';\nimport { Socket } from './sockets';\n\nclass Api {\n  private actions: HttpActions;\n  private headers = {};\n\n  public socket: Socket;\n  public users: Users;\n  public auth: Auth;\n\n  constructor(public storage: Storage) {\n    this.actions = new HttpActions(CONFIG.baseUrl, this.headers);\n    this.socket = new Socket();\n\n    this.users = new Users(this.actions, storage);\n    this.auth = new Auth(this.actions, storage);\n  }\n\n  public initAuthInterceptors(interceptors: Interceptors) {\n    this.actions.initInterceptors(interceptors);\n  }\n}\n\nexport { Api };\n","import React from 'react';\n\nimport { Api } from './Api';\nimport { LocalStorage, MemoryStorage } from './storage';\n\nexport const ApiContext = React.createContext<Api | null>(null);\n\nexport const ApiContextProvider: React.FC = ({ children }) => {\n  const storage = LocalStorage.checkAvailability() ? new LocalStorage() : new MemoryStorage();\n  const api = new Api(storage);\n\n  return (\n    <ApiContext.Provider value={api}>\n      {children}\n    </ApiContext.Provider>\n  );\n};\n","import { useContext } from 'react';\n\nimport { ApiContext } from 'services/api';\n\nexport function useApi() {\n  const api = useContext(ApiContext);\n  if (!api) {\n    throw new Error('Api React Context is not defined');\n  }\n  return api;\n}\n","import React, { useState } from 'react';\nimport { useAsync, useMountedState } from 'react-use';\n\nimport { useToken } from 'utils/hooks/useToken';\nimport { useApi } from 'utils/hooks/useApi';\nimport { User } from 'shared/types/models';\n\nimport { Auth } from './types';\n\nexport const AuthContext = React.createContext<Auth | null>(null);\n\nexport const AuthContextProvider: React.FC = ({ children }) => {\n  const api = useApi();\n  const { getToken, setToken, resetToken } = useToken(api.storage);\n  const isMounted = useMountedState();\n  const isLoadingRequired = Boolean(getToken());\n  const [isLoading, setIsLoading] = useState(isLoadingRequired);\n  const [, setError] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n\n  const refreshTokenInterceptor = async () => {\n    try {\n      setIsLoading(true);\n      const tokens = await api.auth.updateTokens();\n      isMounted() && setToken(tokens.accessToken, tokens.refreshToken);\n      const u = await api.auth.signInByToken();\n      isMounted() && setUser(u.data);\n    } catch (e) {\n      isMounted() && setError(e.message);\n    } finally {\n      isMounted() && setIsLoading(false);\n    }\n  };\n\n  const setAuth = (u: User, token: string, refreshToken: string) => {\n    setUser(u);\n    setToken(token, refreshToken);\n  };\n\n  const resetAuth = () => {\n    setUser(null);\n    resetToken();\n  };\n\n  useAsync(async () => {\n    api.initAuthInterceptors({ refreshTokenInterceptor });\n    if (!user && getToken()) {\n      try {\n        setIsLoading(true);\n        const u = await api.auth.signInByToken();\n        isMounted() && setUser(u.data);\n        isMounted() && setToken(u.tokens.accessToken, u.tokens.refreshToken);\n      } catch (e) {\n        isMounted() && setError(e.message);\n      } finally {\n        isMounted() && setIsLoading(false);\n      }\n    }\n  });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user, setAuth, resetAuth, isLoading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { Storage } from 'services/api/storage';\n\nexport function useToken(storage: Storage) {\n  const getToken = () => storage.get<string, null>('token', null);\n\n  const setToken = (token: string, refreshToken: string) => {\n    storage.set('token', token);\n    storage.set('refreshToken', refreshToken);\n  };\n\n  const resetToken = () => {\n    storage.del('token');\n    storage.del('refreshToken');\n  };\n\n  return {\n    getToken,\n    setToken,\n    resetToken,\n  };\n}\n","import React, { useContext } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\nimport { routes } from 'modules/routes';\nimport { AuthContext } from 'services/auth';\n\nexport const PrivateRoute = ({ component, location, ...routeProps }: RouteProps) => {\n  const auth = useContext(AuthContext);\n  const Component = component !== undefined ? component : () => null;\n\n  const renderComponent = () => (\n    <>\n      {auth?.user\n        ? (<Component />)\n        : (<Redirect to={routes.authRoutes.AUTH_ERROR} />)}\n    </>\n  );\n\n  return <Route key={location?.pathname} {...routeProps} render={renderComponent} />;\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Table, Button, Typography } from 'antd';\nimport { useHistory } from 'react-router';\nimport { useMountedState } from 'react-use';\n\nimport { useApi } from 'utils/hooks/useApi';\nimport { User } from 'shared/types/models';\nimport { routes } from 'modules/routes';\n\nimport styles from './ManageUsers.module.scss';\n\nconst { Text } = Typography;\n\nexport const ManageUsers = () => {\n  const api = useApi();\n  const history = useHistory();\n  const isMounted = useMountedState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [users, setUsers] = useState<User[]>([]);\n\n  const fetchUsers = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const data = await api.users.getUsers();\n      isMounted() && setUsers(data.map((x, i) => ({\n        ...x,\n        key: i,\n      })));\n      isMounted() && setError('');\n    } catch (e) {\n      isMounted() && setError(e.message);\n    } finally {\n      isMounted() && setIsLoading(false);\n    }\n  }, [api.users, isMounted]);\n\n  const deleteUser = async (userId: string) => {\n    try {\n      setIsLoading(true);\n      await api.users.deleteUser(userId);\n      isMounted() && setError('');\n    } catch (e) {\n      isMounted() && setError(e.message);\n    } finally {\n      isMounted() && setIsLoading(false);\n    }\n  };\n\n  const makeEditUserHandler = (userId: string) => () => {\n    history.push(`${routes.profileRoutes.PROFILE}/${userId}`);\n  };\n\n  const makeDeleteUserHandler = (userId: string) => async () => {\n    await deleteUser(userId);\n    await fetchUsers();\n  };\n\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  }, {\n    title: 'Surname',\n    dataIndex: 'surname',\n    key: 'surname',\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n  }, {\n    title: 'Actions',\n    dataIndex: '',\n    key: 'x',\n    render: (_: string, record: User) => (\n      <>\n        <Button type=\"link\" onClick={makeEditUserHandler(record.id)}>\n          Edit\n        </Button>\n        <Button type=\"link\" onClick={makeDeleteUserHandler(record.id)}>\n          Delete\n        </Button>\n      </>\n    ),\n  }];\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  return (\n    <div className={styles.UsersWrapper}>\n      <Table dataSource={users} columns={columns} loading={isLoading} bordered />\n      {error && <Text type=\"danger\">{error}</Text>}\n    </div>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport { ClickParam } from 'antd/lib/menu';\n\nimport { AuthContext } from 'services/auth';\n\nimport { routes } from '../../../routes';\nimport styles from './Header.module.scss';\n\nconst menuItems = [{\n  route: routes.mainRoutes.MAIN, title: 'Main',\n}, {\n  route: routes.userRoutes.USERS, title: 'Users',\n}];\n\nexport const Header = () => {\n  const auth = useContext(AuthContext);\n  const location = useLocation();\n  const [activeTab, setActiveTab] = useState(location.pathname);\n\n  const handleClick = (e: ClickParam) => {\n    setActiveTab(e.key);\n  };\n\n  return (\n    <header>\n      <Menu onClick={handleClick} selectedKeys={[activeTab]} mode=\"horizontal\">\n        {menuItems.map(({ route, title }) => (\n          <Menu.Item key={route}>\n            <Link to={route} key={route}>\n              {title}\n            </Link>\n          </Menu.Item>\n        ))}\n        {auth?.user\n          ? (\n            <Menu.Item key={routes.profileRoutes.PROFILE} className={styles.Button}>\n              <Link to={`${routes.profileRoutes.PROFILE}/${auth.user.id}`}>\n                {auth.user.email}\n              </Link>\n            </Menu.Item>\n          )\n          : (\n            <Menu.Item key={routes.authRoutes.SIGN_IN} className={styles.Button}>\n              <Link to={routes.authRoutes.SIGN_IN}>\n                Sign In\n              </Link>\n            </Menu.Item>\n          )}\n        {!auth?.user && (\n          <Menu.Item key={routes.authRoutes.SIGN_UP} className={styles.Button}>\n            <Link to={routes.authRoutes.SIGN_UP}>\n              Sign Up\n            </Link>\n          </Menu.Item>\n        )}\n      </Menu>\n    </header>\n  );\n};\n","import React, { ReactChild } from 'react';\n\nimport styles from './Layout.module.scss';\nimport { Header } from './Header/Header';\n\ntype Props = {\n  withFooter: boolean;\n  children: ReactChild | ReactChild[];\n};\n\nexport const Layout = ({ withFooter, children }: Props) => (\n  <div className={styles.Wrapper}>\n    <Header />\n    <main className={styles.Content}>{children}</main>\n    {withFooter && (\n      <footer className={styles.Footer}>clicktronix@hotmail.com</footer>\n    )}\n  </div>\n);\n","import React from 'react';\n\nimport { ManageUsers } from 'features/manageUsers/view/ManageUsers/ManageUsers';\n\nimport { Layout } from '../../shared/Layout/Layout';\n\nexport const UsersLayout = () => (\n  <Layout withFooter>\n    <ManageUsers />\n  </Layout>\n);\n","import * as React from 'react';\n\nimport { Module } from 'shared/types/app';\nimport { PrivateRoute } from 'modules/shared/ProtectedRoute/ProtectedRoute';\n\nimport * as routes from './routes';\nimport { UsersLayout } from './view/UsersLayout';\n\nexport class UsersModule extends Module {\n  public static getRoutes() {\n    return [(\n      <PrivateRoute path={routes.USERS} component={UsersLayout} exact />\n    )];\n  }\n}\n","import React from 'react';\nimport { Input, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport type Props = Input['props'] & {\n  password?: boolean;\n  error?: string;\n};\n\nexport const TextInput = ({ error, password, ...rest }: Props) => (\n  <>\n    {password\n      ? <Input.Password {...rest} />\n      : <Input {...rest} />}\n    {error && <Text type=\"danger\">{error}</Text>}\n  </>\n);\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\n\nimport { getFieldWithComponent } from 'shared/helpers/getFieldWithComponent';\n\nimport { TextInput, Props } from '../../components';\n\ntype TextInputFieldProps = Props & FieldRenderProps<string | number>;\n\nfunction TextInputFieldComponent(props: TextInputFieldProps) {\n  const { input, meta, ...rest } = props;\n  const error = (meta.touched && rest.error) || (meta.touched && meta.error) ? meta.error : undefined;\n\n  return <TextInput {...input} error={error} {...rest} />;\n}\n\nconst TextInputField = getFieldWithComponent(TextInputFieldComponent);\n\nexport { TextInputField };\n","import React from 'react';\nimport { Field, FieldRenderProps, FieldProps as RFFieldProps } from 'react-final-form';\n\ntype Value = string | number;\ntype BaseWrappedFieldProps = FieldRenderProps<Value, any> & {\n  value?: any;\n};\n\nfunction getFieldWithComponent<P extends BaseWrappedFieldProps>(Component: React.ComponentType<P>, type?: string) {\n  type OwnProps = Omit<P, keyof BaseWrappedFieldProps>;\n  type FieldProps = RFFieldProps<Value, P>;\n  type ResultProps = OwnProps & FieldProps;\n\n  const result = (props: ResultProps) => (\n    <Field type={type} {...props} component={Component} />\n  );\n\n  result.displayName = `FieldWithComponent(${Component.displayName || Component.name || 'Component'})`;\n\n  return result;\n}\n\nexport { getFieldWithComponent };\n","import React from 'react';\n\nimport styles from './ChatMessage.module.scss';\n\nexport const ChatMessage: React.FC = ({ children }) => (\n  <div className={styles.Wrapper}>\n    {children}\n  </div>\n);\n","import React, { useState, useContext, useEffect } from 'react';\nimport cn from 'classnames';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { Typography, Button } from 'antd';\n\nimport { TextInputField } from 'shared/view/fields';\nimport { useApi } from 'utils/hooks/useApi';\nimport { AuthContext } from 'services/auth';\nimport { MessageResponse } from 'services/api/types/models/message';\nimport { Message } from 'shared/types/models';\n\nimport styles from './Chat.module.scss';\nimport { ChatMessage } from '../ChatMessage/ChatMessage';\n\ntype ChatForm = {\n  message: string;\n};\n\nconst { Text } = Typography;\n\nexport const Chat = () => {\n  const api = useApi();\n  const auth = useContext(AuthContext);\n  const [isRollUp, setIsRollUp] = useState(false);\n  const [isLoading] = useState(false);\n  const [error] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const handleFormSubmit = (values: ChatForm) => {\n    auth?.user && api.socket.sendMessage({\n      content: values.message, sender: auth.user,\n    });\n  };\n\n  const onHeaderClick = () => {\n    setIsRollUp(state => !state);\n  };\n\n  useEffect(() => {\n    api.socket.init();\n    const observable = api.socket.onMessage();\n    observable.subscribe((m: MessageResponse) => {\n      setMessages(state => [...state, m]);\n    });\n\n    return () => api.socket.disconnect();\n  });\n\n  const renderForm = ({ handleSubmit }: FormRenderProps<ChatForm>) => (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <div\n        className={cn(styles.Content, {\n          [styles.SlideUp]: isRollUp,\n          [styles.SlideDown]: !isRollUp,\n        })}\n      >\n        {messages.map((x, i) => (\n          <ChatMessage key={i}>\n            {x}\n          </ChatMessage>\n        ))}\n      </div>\n      {auth?.user && (\n        <div\n          className={cn(styles.InputWrapper, {\n            [styles.SlideUp]: isRollUp,\n            [styles.SlideDown]: !isRollUp,\n          })}\n        >\n          <TextInputField\n            name=\"message\"\n            placeholder=\"Enter your message\"\n          />\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Send\n          </Button>\n        </div>\n      )}\n      {error && <Text type=\"danger\">{error}</Text>}\n    </form>\n  );\n\n  return (\n    <div className={styles.Window}>\n      <div className={styles.Header} onClick={onHeaderClick}>\n        Chat\n      </div>\n      <Form<ChatForm>\n        onSubmit={handleFormSubmit}\n        render={renderForm}\n        subscription={{}}\n      />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Chat } from 'features/chat/view/Chat/Chat';\n\nimport { Layout } from '../../shared/Layout/Layout';\nimport styles from './MainLayout.module.scss';\n\nexport const MainLayout = () => (\n  <Layout withFooter>\n    <div className={styles.Wrapper}>\n      <h1>Main page</h1>\n      <Chat />\n    </div>\n  </Layout>\n);\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Module } from 'shared/types/app';\n\nimport * as routes from './routes';\nimport { MainLayout } from './view/MainLayout';\n\nexport class MainModule extends Module {\n  public static getRoutes() {\n    return [(\n      <Route path={routes.MAIN} component={MainLayout} exact />\n    )];\n  }\n}\n","export function makeRequired<T>(errorMsg: T) {\n  return (value: string | number) => (!value ? errorMsg : undefined);\n}\n","type Validator = (value: string | number) => string | number | undefined;\n\nexport function composeValidators(...validators: Validator[]) {\n  return (value: string | number) => validators.reduce((error, validator) => error || validator(value), undefined);\n}\n","import React, { useState, useContext } from 'react';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { Form as AntForm, Typography } from 'antd';\nimport { useHistory } from 'react-router';\nimport { useMountedState } from 'react-use';\n\nimport { TextInputField } from 'shared/view/fields';\nimport { Button } from 'shared/view/components';\nimport { composeValidators, makeRequired } from 'shared/validators';\nimport { useApi } from 'utils/hooks/useApi';\nimport { AuthContext } from 'services/auth';\nimport { routes } from 'modules/routes';\n\nimport styles from './SignInUser.module.scss';\n\nconst { Text } = Typography;\n\ntype SignInForm = {\n  email: string;\n  password: string;\n};\n\nexport const SignIn = () => {\n  const api = useApi();\n  const history = useHistory();\n  const isMounted = useMountedState();\n  const auth = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const signIn = async (values: SignInForm) => {\n    try {\n      setIsLoading(true);\n      const { data, tokens } = await api.auth.signIn(values);\n      auth?.setAuth(data, tokens.accessToken, tokens.refreshToken);\n      isMounted && history.push(routes.mainRoutes.MAIN);\n    } catch (e) {\n      isMounted && setError(e.message);\n    } finally {\n      isMounted && setIsLoading(false);\n    }\n  };\n\n  const handleFormSubmit = (values: SignInForm) => signIn(values);\n\n  const renderForm = ({ handleSubmit }: FormRenderProps<SignInForm>) => (\n    <div className={styles.SignInForm}>\n      <h1>Sign In</h1>\n      <AntForm onFinish={handleSubmit}>\n        <AntForm.Item>\n          <TextInputField\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n            password\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Sign In\n          </Button>\n        </AntForm.Item>\n        {error && <Text type=\"danger\">{error}</Text>}\n      </AntForm>\n    </div>\n  );\n\n  return (\n    <Form<SignInForm>\n      onSubmit={handleFormSubmit}\n      render={renderForm}\n      subscription={{}}\n    />\n  );\n};\n","import React from 'react';\n\nimport { SignIn } from 'features/signInUser/view/SignInUser';\n\nimport { Layout } from '../../../shared/Layout/Layout';\n\nexport const SignInLayout = () => (\n  <Layout withFooter>\n    <SignIn />\n  </Layout>\n);\n","import React, { useState } from 'react';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { Form as AntForm, Typography } from 'antd';\nimport { useMountedState } from 'react-use';\n\nimport { TextInputField } from 'shared/view/fields';\nimport { Button } from 'shared/view/components';\nimport { composeValidators, makeRequired } from 'shared/validators';\nimport { useApi } from 'utils/hooks/useApi';\n\nimport styles from './SignUpUser.module.scss';\n\nconst { Text } = Typography;\n\ntype SignUpForm = {\n  name: string;\n  surname: string;\n  email: string;\n  password: string;\n};\n\nexport const SignUp = () => {\n  const api = useApi();\n  const isMounted = useMountedState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const signUp = async (values: SignUpForm) => {\n    try {\n      setIsLoading(true);\n      await api.auth.signUp(values);\n    } catch (e) {\n      isMounted && setError(e.message);\n    } finally {\n      isMounted && setIsLoading(false);\n    }\n  };\n\n  const handleFormSubmit = (values: SignUpForm) => signUp(values);\n\n  const renderForm = ({ handleSubmit }: FormRenderProps<SignUpForm>) => (\n    <div className={styles.SignUpForm}>\n      <h1>Sign Up</h1>\n      <AntForm onFinish={handleSubmit} className={styles.SignInForm}>\n        <AntForm.Item>\n          <TextInputField\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"surname\"\n            placeholder=\"Enter your surname\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n            password\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Sign Up\n          </Button>\n        </AntForm.Item>\n        {error && <Text type=\"danger\">{error}</Text>}\n      </AntForm>\n    </div>\n  );\n\n  return (\n    <Form<SignUpForm>\n      onSubmit={handleFormSubmit}\n      render={renderForm}\n      subscription={{}}\n    />\n  );\n};\n","import React from 'react';\n\nimport { SignUp } from 'features/signUpUser/view/SignUpUser';\n\nimport { Layout } from '../../../shared/Layout/Layout';\n\nexport const SignUpLayout = () => (\n  <Layout withFooter>\n    <SignUp />\n  </Layout>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { routes } from 'modules/routes';\n\nimport { Layout } from '../../../shared/Layout/Layout';\nimport styles from './UnauthorizedLayout.module.scss';\n\nexport const UnauthorizedLayout = () => (\n  <Layout withFooter>\n    <div className={styles.Wrapper}>\n      Sorry, but you need to\n      {' '}\n      <Link to={routes.authRoutes.SIGN_IN}>sign in</Link>\n      {' '}\n      to view this page.\n    </div>\n  </Layout>\n);\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Module } from 'shared/types/app';\n\nimport * as routes from './routes';\nimport { SignInLayout } from './view/SignInLayout/SignInLayout';\nimport { SignUpLayout } from './view/SignUpLayout/SignUpLayout';\nimport { UnauthorizedLayout } from './view/UnauthorizedLayout/UnauthorizedLayout';\n\nexport class AuthModule extends Module {\n  public static getRoutes() {\n    return [\n      (\n        <Route exact key={routes.SIGN_IN} path={routes.SIGN_IN} component={SignInLayout} />\n      ),\n      (\n        <Route exact key={routes.SIGN_UP} path={routes.SIGN_UP} component={SignUpLayout} />\n      ),\n      (\n        <Route exact key={routes.AUTH_ERROR} path={routes.AUTH_ERROR} component={UnauthorizedLayout} />\n      ),\n    ];\n  }\n}\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { Form as AntForm, Typography } from 'antd';\nimport { useParams } from 'react-router';\nimport { useMountedState } from 'react-use';\n\nimport { AuthContext } from 'services/auth';\nimport { TextInputField } from 'shared/view/fields';\nimport { Button } from 'shared/view/components';\nimport { useApi } from 'utils/hooks/useApi';\nimport { UpdateUser } from 'shared/types/models';\n\nimport styles from './Profile.module.scss';\n\ntype ProfileForm = {\n  name: string;\n  surname: string;\n  email: string;\n  password: string;\n  newPassword: string;\n};\n\nconst { Text } = Typography;\n\nexport const Profile = () => {\n  const initialUser = {\n    name: '',\n    surname: '',\n    email: '',\n    password: '',\n    newPassword: '',\n  };\n  const api = useApi();\n  const auth = useContext(AuthContext);\n  const { userId } = useParams();\n  const isMounted = useMountedState();\n  const [error, setError] = useState('');\n  const [user, setUser] = useState<UpdateUser>(initialUser);\n  const [isLoading, setIsLoading] = useState(false);\n  const isOwnProfile = userId === auth?.user?.id;\n\n  const fetchUserProfile = useCallback(async () => {\n    if (userId) {\n      try {\n        setIsLoading(true);\n        const usr = await api.users.getUser(userId);\n        isMounted() && setUser(state => ({\n          ...state, ...usr,\n        }));\n        isMounted() && setError('');\n      } catch (e) {\n        isMounted() && setError(e.message);\n      } finally {\n        isMounted() && setIsLoading(false);\n      }\n    }\n  }, [api.users, isMounted, userId]);\n\n  const updateProfile = async (values: ProfileForm) => {\n    try {\n      setIsLoading(true);\n      userId && await api.users.updateUser(userId, {\n        ...values, id: userId,\n      });\n      isMounted() && setError('');\n    } catch (e) {\n      isMounted() && setError(e.message);\n    } finally {\n      isMounted() && setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, [fetchUserProfile]);\n\n  const handleFormSubmit = (values: ProfileForm) => updateProfile(values);\n\n  const renderForm = ({ handleSubmit }: FormRenderProps<ProfileForm>) => (\n    <div className={styles.ProfileForm}>\n      <h1>\n        Edit\n        {' '}\n        {user?.name}\n        {'\\'s '}\n        profile\n      </h1>\n      <AntForm onFinish={handleSubmit}>\n        <AntForm.Item>\n          <TextInputField\n            name=\"name\"\n            placeholder=\"Enter your name\"\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"surname\"\n            placeholder=\"Enter your surname\"\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"email\"\n            placeholder=\"Enter your email\"\n          />\n        </AntForm.Item>\n        {isOwnProfile && (\n          <>\n            <AntForm.Item>\n              <TextInputField\n                name=\"password\"\n                placeholder=\"Enter your current password\"\n                password\n              />\n            </AntForm.Item>\n            <AntForm.Item>\n              <TextInputField\n                name=\"newPassword\"\n                placeholder=\"Enter your new password\"\n                password\n              />\n            </AntForm.Item>\n          </>\n        )}\n        <AntForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Save\n          </Button>\n        </AntForm.Item>\n        {error && <Text type=\"danger\">{error}</Text>}\n      </AntForm>\n    </div>\n  );\n\n  return (\n    <Form<ProfileForm>\n      onSubmit={handleFormSubmit}\n      render={renderForm}\n      initialValues={user}\n      subscription={{}}\n    />\n  );\n};\n","import React from 'react';\n\nimport { Profile } from 'features/profile/view/Profile';\n\nimport { Layout } from '../../shared/Layout/Layout';\n\nexport const ProfileLayout = () => (\n  <Layout withFooter>\n    <Profile />\n  </Layout>\n);\n","import * as React from 'react';\n\nimport { Module } from 'shared/types/app';\nimport { PrivateRoute } from 'modules/shared/ProtectedRoute/ProtectedRoute';\n\nimport * as routes from './routes';\nimport { ProfileLayout } from './view/ProfileLayout';\n\nexport class ProfileModule extends Module {\n  public static getRoutes() {\n    return [(\n      <PrivateRoute path={`${routes.PROFILE}/:userId`} component={ProfileLayout} exact />\n    )];\n  }\n}\n","import React from 'react';\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary';\nimport 'antd/dist/antd.css';\n\nimport { ApiContextProvider } from 'services/api';\nimport { AuthContextProvider } from 'services/auth';\n\nconst App: React.FC = ({ children }) => (\n  <ErrorBoundary>\n    <ApiContextProvider>\n      <AuthContextProvider>\n        {children}\n      </AuthContextProvider>\n    </ApiContextProvider>\n  </ErrorBoundary>\n);\n\nexport { App };\n","import React, { useContext } from 'react';\nimport { Spin } from 'antd';\n\nimport { AuthContext } from 'services/auth';\n\nimport { Layout } from '../Layout/Layout';\nimport styles from './AuthChecker.module.scss';\n\nexport const AuthChecker: React.FC = ({ children }) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <>\n      {auth?.isLoading\n        ? (\n          <Layout withFooter>\n            <div className={styles.Wrapper}>\n              <Spin size=\"large\" />\n            </div>\n          </Layout>\n        )\n        : children}\n    </>\n  );\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Core } from 'core/Core';\nimport * as serviceWorker from 'core/configureServiceWorker';\nimport 'shared/styles/main.scss';\n\nReactDOM.render(<Core />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport * as modules from 'modules';\nimport { routes } from 'modules/routes';\nimport { App } from 'core/App';\nimport { AuthChecker } from 'modules/shared/AuthChecker/AuthChecker';\n\nexport const Core = () => (\n  <BrowserRouter>\n    <App>\n      <AuthChecker>\n        <Route path=\"/\">\n          <Switch>\n            {Object.values(modules).map(x => x.getRoutes())}\n            <Redirect to={routes.mainRoutes.MAIN} />\n          </Switch>\n        </Route>\n      </AuthChecker>\n    </App>\n  </BrowserRouter>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Window\":\"Chat_Window__2UqRv\",\"Header\":\"Chat_Header__2AJs4\",\"Content\":\"Chat_Content__1oWoC\",\"InputWrapper\":\"Chat_InputWrapper__P0-h6\",\"SlideUp\":\"Chat_SlideUp__30-Tx\",\"SlideDown\":\"Chat_SlideDown__1NjUx\"};"],"sourceRoot":""}