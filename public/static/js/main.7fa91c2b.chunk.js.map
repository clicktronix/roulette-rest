{"version":3,"sources":["services/api/storage/index.ts","features/chat/view/ChatMessage/ChatMessage.module.scss","modules/shared/Layout/Layout.module.scss","modules/shared/Layout/Header/Header.module.scss","features/signUpUser/view/SignUpUser.module.scss","services/api/storage/LocalStorage.ts","services/api/storage/MemoryStorage.ts","features/manageUsers/view/ManageUsers/ManageUsers.module.scss","features/chat/view/Chat/img/arrow.png","modules/Main/view/MainLayout.module.scss","features/signInUser/view/SignInUser.module.scss","modules/Auth/view/UnauthorizedLayout/UnauthorizedLayout.module.scss","modules/Auth/view/LogoutLayout/LogoutLayout.module.scss","features/profile/view/Profile.module.scss","modules/shared/AuthChecker/AuthChecker.module.scss","features/chat/view/Chat/Chat.module.scss","shared/types/app.ts","modules/Main/routes.ts","modules/Users/routes.ts","modules/Auth/routes.ts","modules/Profile/routes.ts","modules/routes.ts","core/config.ts","services/api/HttpActions.ts","services/api/errors/ApiError.ts","services/api/entities/BaseApi.ts","shared/types/guards.ts","services/api/errors/isErrorStatus.ts","services/api/converters/users.ts","services/api/entities/Users.ts","services/api/converters/auth.ts","services/api/entities/Auth.ts","services/api/sockets/Socket.ts","services/api/Api.ts","services/api/context.tsx","shared/hooks/useApi.ts","shared/hooks/useValidState.ts","services/auth/context.tsx","shared/hooks/useToken.ts","modules/shared/ProtectedRoute/ProtectedRoute.tsx","shared/view/components/TextInput/TextInput.tsx","shared/view/components/Modal/Modal.tsx","features/manageUsers/view/DeleteConfirmModal/DeleteConfirmModal.tsx","features/manageUsers/view/ManageUsers/ManageUsers.tsx","shared/view/fields/TextInputField/TextInputField.tsx","shared/helpers/getFieldWithComponent.tsx","features/chat/view/ChatMessage/ChatMessage.tsx","features/chat/view/Chat/Chat.tsx","modules/shared/Layout/Header/Header.tsx","modules/shared/Layout/Layout.tsx","modules/Users/view/UsersLayout.tsx","modules/Users/Users.tsx","modules/Main/view/MainLayout.tsx","modules/Main/Main.tsx","shared/validators/isRequired.ts","shared/validators/composeValidators.ts","features/signInUser/view/SignInUser.tsx","modules/Auth/view/SignInLayout/SignInLayout.tsx","features/signUpUser/view/SignUpUser.tsx","modules/Auth/view/SignUpLayout/SignUpLayout.tsx","modules/Auth/view/UnauthorizedLayout/UnauthorizedLayout.tsx","modules/Auth/view/LogoutLayout/LogoutLayout.tsx","modules/Auth/Auth.tsx","features/profile/view/Profile.tsx","modules/Profile/view/ProfileLayout.tsx","modules/Profile/Profile.tsx","core/App.tsx","modules/shared/AuthChecker/AuthChecker.tsx","core/configureServiceWorker.ts","index.tsx","core/Core.tsx"],"names":["module","exports","LocalStorage","isLocalStorageAvailable","this","checkAvailability","localStorage","setItem","removeItem","e","console","error","key","item","JSON","stringify","def","result","data","getItem","parse","MemoryStorage","Module","MAIN","USERS","SIGN_UP","SIGN_IN","AUTH_ERROR","LOGOUT","PROFILE","routes","mainRoutes","userRoutes","authRoutes","profileRoutes","dotenv","CONFIG","process","HttpActions","baseURL","headers","request","isRefreshing","axios","create","withCredentials","url","options","config","get","post","patch","delete","put","refreshTokenInterceptor","interceptors","response","use","status","catch","finally","ApiError","params","message","Error","BaseApi","actions","storage","t","set","Authorization","token","converter","responseData","Boolean","isErrorStatus","convertServerUser","user","id","_id","name","surname","email","convertServerUsers","users","map","x","Users","setHeaders","handleResponse","userId","body","del","autobind","convertServerAuth","tokens","accessToken","refreshToken","Auth","success","Socket","io","connect","transports","on","info","emit","fromEvent","disconnect","Api","socket","auth","initInterceptors","ApiContext","React","createContext","ApiContextProvider","children","api","Provider","value","useApi","useContext","useValidState","isMounted","initial","useState","state","setState","useCallback","arg","AuthContext","AuthContextProvider","getToken","setToken","resetToken","useMountedState","isLoading","setIsLoading","setError","setUser","a","updateTokens","signInByToken","u","useAsync","initAuthInterceptors","setAuth","resetAuth","PrivateRoute","component","location","routeProps","Component","undefined","pathname","render","to","Text","Typography","TextInput","password","rest","Password","type","Modal","title","visible","onOk","onCancel","DeleteConfirmModal","onDelete","isShowModal","ManageUsers","history","useHistory","setUsers","setSetIsShowModal","userToBeDeleted","setUserToBeDeleted","openModal","closeModal","fetchUsers","getUsers","i","deleteUser","makeDeleteUserHandler","columns","dataIndex","_","record","onClick","push","useEffect","className","styles","UsersWrapper","dataSource","loading","bordered","TextInputField","props","displayName","getFieldWithComponent","input","meta","touched","ChatMessage","cn","Wrapper","OwnMessage","sender","SenderName","content","Chat","isHidden","isRollUp","setIsRollUp","messages","setMessages","onMessage","subscribe","m","Window","Header","src","arrow","Arrow","RotatedArrow","alt","onSubmit","values","sendMessage","form","handleSubmit","event","reset","autoComplete","Content","SlideUp","SlideDown","InputWrapper","placeholder","htmlType","SendButton","Messages","subscription","menuItems","route","useLocation","activeTab","setActiveTab","selectedKeys","mode","Item","SubMenu","Button","Layout","withFooter","Footer","UsersLayout","UsersModule","path","exact","MainLayout","MainModule","makeRequired","errorMsg","composeValidators","validators","reduce","validator","SignIn","signIn","SignInForm","onFinish","validate","SignInLayout","SignUp","setSuccess","signUp","SignUpForm","SignUpLayout","UnauthorizedLayout","Logout","fetchLogout","logout","size","AuthModule","Profile","useParams","newPassword","isOwnProfile","fetchUserProfile","getUser","usr","updateProfile","updateUser","ProfileForm","initialValues","ProfileLayout","ProfileModule","App","AuthChecker","window","hostname","match","ReactDOM","Object","modules","getRoutes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fa91c2b.chunk.js","sourcesContent":["export { LocalStorage } from './LocalStorage';\nexport { MemoryStorage } from './MemoryStorage';\nexport * from './types';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ChatMessage_Wrapper__3RCRO\",\"OwnMessage\":\"ChatMessage_OwnMessage__2XSB5\",\"SenderName\":\"ChatMessage_SenderName__3UReH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Layout_Wrapper__3uO9p\",\"Content\":\"Layout_Content__1FFbA\",\"Footer\":\"Layout_Footer__20rqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Header_Button__HX-KD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignUpForm\":\"SignUpUser_SignUpForm__3Od4a\",\"SubmitButton\":\"SignUpUser_SubmitButton__823qS\"};","import { Storage } from './types';\n\nclass LocalStorage implements Storage {\n  public static checkAvailability() {\n    const testKey = '__test__';\n\n    try {\n      localStorage.setItem(testKey, '__test-value__');\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  private isLocalStorageAvailable: boolean | null = null;\n\n  constructor() {\n    this.isLocalStorageAvailable = LocalStorage.checkAvailability();\n  }\n\n  public set<T>(key: string, item: T): void {\n    if (!this.isLocalStorageAvailable) {\n      return;\n    }\n\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n\n  public get<T, D>(key: string, def: D): T | D {\n    let result: T | D = def;\n    if (!this.isLocalStorageAvailable) {\n      return result;\n    }\n\n    const data = localStorage.getItem(key);\n\n    try {\n      result = data ? (JSON.parse(data) as T) : def;\n    } catch (e) {\n      console.error(e);\n    }\n\n    return result;\n  }\n\n  public del(key: string) {\n    if (!this.isLocalStorageAvailable) {\n      return;\n    }\n    localStorage.removeItem(key);\n  }\n}\n\nexport { LocalStorage };\n","import { Storage } from './types';\n\nclass MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  public set<T>(key: string, item: T): void {\n    this.data[key] = JSON.stringify(item);\n  }\n\n  public get<T, D>(key: string, def: D): T | D {\n    const result = this.data[key] || null;\n    const parsed = result ? (JSON.parse(result) as T) : def;\n\n    return parsed;\n  }\n\n  public del(key: string) {\n    delete this.data[key];\n  }\n}\n\nexport { MemoryStorage };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersWrapper\":\"ManageUsers_UsersWrapper__3LuPT\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.1748438e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MainLayout_Wrapper__3_gRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SignInForm\":\"SignInUser_SignInForm__3yhMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"UnauthorizedLayout_Wrapper__3d0om\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"LogoutLayout_Wrapper__2AK3s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileForm\":\"Profile_ProfileForm__1Yh2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"AuthChecker_Wrapper__30FrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Window\":\"Chat_Window__2UqRv\",\"Header\":\"Chat_Header__2AJs4\",\"Content\":\"Chat_Content__1oWoC\",\"Messages\":\"Chat_Messages__DpKke\",\"InputWrapper\":\"Chat_InputWrapper__P0-h6\",\"Arrow\":\"Chat_Arrow__3lavz\",\"RotatedArrow\":\"Chat_RotatedArrow__2BFUb\",\"SendButton\":\"Chat_SendButton__1YU2r\",\"SlideUp\":\"Chat_SlideUp__30-Tx\",\"closeChat\":\"Chat_closeChat__3YjoI\",\"SlideDown\":\"Chat_SlideDown__1NjUx\",\"openChat\":\"Chat_openChat__1xc0r\"};","import { ReactElement } from 'react';\nimport { RouteProps } from 'react-router';\n\nexport abstract class Module {\n  public getRoutes?(): ReactElement<RouteProps> | Array<ReactElement<RouteProps>>;\n}\n\nexport type AppData = {\n  modules: Module[];\n};\n","export const MAIN = '/';\n","export const USERS = '/users';\n","export const SIGN_UP = '/sign-up';\nexport const SIGN_IN = '/sign-in';\nexport const AUTH_ERROR = '/auth-error';\nexport const LOGOUT = '/logout';\n","export const PROFILE = '/profile';\n","import * as mainRoutes from './Main/routes';\nimport * as userRoutes from './Users/routes';\nimport * as authRoutes from './Auth/routes';\nimport * as profileRoutes from './Profile/routes';\n\nexport const routes = {\n  mainRoutes, userRoutes, authRoutes, profileRoutes,\n};\n","import * as dotenv from 'dotenv';\n\n/**\n * Load environment variables from .env file.\n */\ndotenv.config();\n\nexport const CONFIG = { baseUrl: process.env.REACT_APP_BASE_URL || 'https://localhost:8080' };\n","import axios, { AxiosInstance, AxiosRequestConfig, AxiosPromise } from 'axios';\n\nimport { InterceptorErrorResponse, HttpActionParams, Interceptors } from './types';\n\nclass HttpActions {\n  private request: AxiosInstance;\n  private isRefreshing: boolean = false;\n\n  constructor(baseURL: string, headers?: AxiosRequestConfig['headers']) {\n    this.request = axios.create({\n      baseURL,\n      headers,\n      withCredentials: false,\n    });\n  }\n\n  public get<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    const config: AxiosRequestConfig = {\n      data, ...options,\n    };\n    return this.request.get(url, config);\n  }\n\n  public post<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    return this.request.post(url, data, options);\n  }\n\n  public patch<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    return this.request.patch(url, data, options);\n  }\n\n  public del<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    const config: AxiosRequestConfig = {\n      url, data, ...options,\n    };\n    return this.request.delete(url, config);\n  }\n\n  public put<T>({ url, data, options }: HttpActionParams): AxiosPromise<T> {\n    return this.request.put(url, data, { ...options });\n  }\n\n  public initInterceptors({ refreshTokenInterceptor }: Interceptors) {\n    this.request.interceptors.response.use(\n      response => response,\n      (error: InterceptorErrorResponse) => {\n        const { response } = error;\n\n        if (response.status === 401 && !this.isRefreshing) {\n          this.isRefreshing = true;\n          refreshTokenInterceptor().catch(e => e).finally(() => {\n            this.isRefreshing = false;\n          });\n        }\n\n        return error;\n      },\n    );\n  }\n}\n\nexport { HttpActions };\n","import { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nexport type Params = {\n  config: AxiosRequestConfig;\n  status: number;\n  request: XMLHttpRequest;\n  response: AxiosResponse;\n};\n\nexport class ApiError extends Error {\n  public config: AxiosRequestConfig;\n  public status: number;\n  public request: XMLHttpRequest;\n  public response: any;\n\n  constructor(params: Params) {\n    const { config, status, request, response } = params;\n    super(response.data.message);\n    this.config = config;\n    this.status = status;\n    this.request = request;\n    this.response = response;\n  }\n}\n","import { AxiosResponse } from 'axios';\n\nimport { isDataResponse } from 'shared/types/guards';\n\nimport { HttpActions } from '../HttpActions';\nimport { Storage } from '../storage';\nimport { Converter } from '../types';\nimport { isErrorStatus } from '../errors/isErrorStatus';\nimport { ApiError } from '../errors/ApiError';\n\nclass BaseApi {\n  protected actions: HttpActions;\n  protected storage: Storage;\n\n  get token() {\n    return this.storage.get<string, null>('token', null);\n  }\n\n  set token(t: string | null) {\n    this.storage.set('token', t);\n  }\n\n  get refreshToken() {\n    return this.storage.get<string, null>('refreshToken', null);\n  }\n\n  set refreshToken(t: string | null) {\n    this.storage.set('refreshToken', t);\n  }\n\n  constructor(actions: HttpActions, storage: Storage) {\n    this.actions = actions;\n    this.storage = storage;\n  }\n\n  protected setHeaders() {\n    return { headers: { Authorization: this.token } };\n  }\n\n  protected static handleResponse<ResponseData, Result>(\n    response: AxiosResponse,\n    converter?: Converter<ResponseData, Result> | null,\n  ): Result {\n    const responseData = (() => {\n      if (isDataResponse<ResponseData>(response.data)) {\n        return response.data.data;\n      }\n      return response.data;\n    })();\n    if (isErrorStatus(response.status)) {\n      const { config, status, request } = response;\n      throw new ApiError({\n        config,\n        status,\n        request,\n        response,\n      });\n    }\n    if (converter) {\n      return converter(responseData as ResponseData);\n    }\n    return responseData;\n  }\n}\n\nexport { BaseApi };\n","import { DataResponse } from 'services/api/types';\n\nexport function isDataResponse<R>(data: any): data is DataResponse<R> {\n  return Boolean(data.data);\n}\n","export function isErrorStatus(status: number): boolean {\n  return status >= 400 && status <= 503;\n}\n","import { User } from 'shared/types/models';\n\nimport { UserResponse, UsersResponse } from '../types/models/user';\n\nexport function convertServerUser({ user }: UserResponse): User {\n  return {\n    id: user._id,\n    name: user.name,\n    surname: user.surname,\n    email: user.email,\n  };\n}\n\nexport function convertServerUsers({ users }: UsersResponse): User[] {\n  return users.map(x => convertServerUser({ user: x }));\n}\n","import { autobind } from 'core-decorators';\n\nimport { User } from 'shared/types/models';\n\nimport { BaseApi } from './BaseApi';\nimport { UsersResponse, UserResponse } from '../types/models/user';\nimport { convertServerUser, convertServerUsers } from '../converters/users';\n\nclass Users extends BaseApi {\n  @autobind\n  public async getUsers() {\n    const response = await this.actions.get<UsersResponse>({\n      url: '/users', options: this.setHeaders(),\n    });\n    return Users.handleResponse(response, convertServerUsers);\n  }\n\n  @autobind\n  public async getUser(userId: string) {\n    const response = await this.actions.get<UserResponse>({\n      url: `/users/${userId}`, options: this.setHeaders(),\n    });\n    return Users.handleResponse(response, convertServerUser);\n  }\n\n  @autobind\n  public async updateUser(userId: string, body: User & { password?: string, newPassword?: string }) {\n    const response = await this.actions.put<UserResponse>({\n      url: `/users/${userId}`, data: body, options: this.setHeaders(),\n    });\n    return Users.handleResponse(response, convertServerUser);\n  }\n\n  @autobind\n  public async deleteUser(userId: string) {\n    await this.actions.del<UserResponse>({\n      url: `/users/${userId}`,\n      options: this.setHeaders(),\n    });\n  }\n}\n\nexport { Users };\n","import { AuthUser } from 'shared/types/models';\n\nimport { AuthResponse } from '../types/models/auth';\n\nexport function convertServerAuth({ user, token }: AuthResponse): AuthUser {\n  return {\n    data: {\n      id: user._id,\n      name: user.name,\n      surname: user.surname,\n      email: user.email,\n    },\n    tokens: {\n      accessToken: token.accessToken,\n      refreshToken: token.refreshToken,\n    },\n  };\n}\n","import { autobind } from 'core-decorators';\n\nimport { RegisterUser } from 'shared/types/models';\n\nimport { BaseApi } from './BaseApi';\nimport { AuthResponse, TokenResponse } from '../types/models/auth';\nimport { convertServerAuth } from '../converters/auth';\n\nclass Auth extends BaseApi {\n  @autobind\n  public async signUp(data: RegisterUser) {\n    await this.actions.post<AuthResponse>({\n      url: '/register', data,\n    });\n  }\n\n  @autobind\n  public async signIn(data: { email: string; password: string }) {\n    const response = await this.actions.post<AuthResponse>({\n      url: '/authenticate', data,\n    });\n    return Auth.handleResponse(response, convertServerAuth);\n  }\n\n  @autobind\n  public async signInByToken() {\n    const response = await this.actions.get<AuthResponse>({\n      url: '/token-authenticate', options: this.setHeaders(),\n    });\n    return Auth.handleResponse(response, convertServerAuth);\n  }\n\n  @autobind\n  public async updateTokens() {\n    const response = await this.actions.post<{ token: TokenResponse }>({\n      url: '/authenticate/refresh',\n      options: this.setHeaders(),\n      data: { refreshToken: this.refreshToken },\n    });\n    return Auth.handleResponse(response, (data: { token: TokenResponse }) => data.token);\n  }\n\n  @autobind\n  public async logout() {\n    const response = await this.actions.get<{ success: boolean }>({\n      url: '/logout',\n      options: this.setHeaders(),\n    });\n    return Auth.handleResponse(response, (data: { success: boolean }) => data.success);\n  }\n}\n\nexport { Auth };\n","import io from 'socket.io-client';\nimport { autobind } from 'core-decorators';\nimport { fromEvent, Observable } from 'rxjs';\n\nimport { Message } from 'shared/types/models';\nimport { CONFIG } from 'core/config';\n\nimport { MessageResponse } from '../types/models/message';\n\nexport class Socket {\n  private io: SocketIOClient.Socket;\n\n  constructor() {\n    this.io = io.connect(CONFIG.baseUrl, { transports: ['websocket'] });\n    this.io.on('connect', () => console.info('Socket connected'));\n    this.io.on('disconnect', () => console.info('Socket disconnected'));\n  }\n\n  @autobind\n  public sendMessage(message: Message) {\n    this.io.emit('message', message);\n  }\n\n  @autobind\n  public onMessage(): Observable<MessageResponse> {\n    return fromEvent(this.io, 'message');\n  }\n\n  @autobind\n  public disconnect() {\n    this.io.disconnect();\n  }\n}\n","import { CONFIG } from 'core/config';\n\nimport { HttpActions } from './HttpActions';\nimport { Users } from './entities/Users';\nimport { Storage } from './storage';\nimport { Auth } from './entities/Auth';\nimport { Interceptors } from './types';\nimport { Socket } from './sockets';\n\nclass Api {\n  public socket: Socket;\n  public users: Users;\n  public auth: Auth;\n  private actions: HttpActions;\n  private headers = {};\n\n  constructor(public storage: Storage) {\n    this.actions = new HttpActions(CONFIG.baseUrl, this.headers);\n    this.socket = new Socket();\n\n    this.users = new Users(this.actions, storage);\n    this.auth = new Auth(this.actions, storage);\n  }\n\n  public initAuthInterceptors(interceptors: Interceptors) {\n    this.actions.initInterceptors(interceptors);\n  }\n}\n\nexport { Api };\n","import React from 'react';\n\nimport { Api } from './Api';\nimport { LocalStorage, MemoryStorage } from './storage';\n\nexport const ApiContext = React.createContext<Api | null>(null);\n\nexport const ApiContextProvider: React.FC = ({ children }) => {\n  const storage = LocalStorage.checkAvailability() ? new LocalStorage() : new MemoryStorage();\n  const api = new Api(storage);\n\n  return (\n    <ApiContext.Provider value={api}>\n      {children}\n    </ApiContext.Provider>\n  );\n};\n","import { useContext } from 'react';\n\nimport { ApiContext } from 'services/api';\n\nexport function useApi() {\n  const api = useContext(ApiContext);\n  if (!api) {\n    throw new Error('Api React Context is not defined');\n  }\n  return api;\n}\n","import { useState, useCallback } from 'react';\n\nexport function useValidState<T>(isMounted: () => boolean, initial: T): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [state, setState] = useState<T>(initial);\n  const checkedState: React.Dispatch<React.SetStateAction<T>> = useCallback((arg: T) => {\n    if (isMounted()) {\n      setState(arg);\n    }\n  }, [isMounted]);\n\n  return [\n    state,\n    checkedState,\n  ];\n}\n","import React from 'react';\nimport { useAsync, useMountedState } from 'react-use';\n\nimport { useToken } from 'shared/hooks/useToken';\nimport { useApi } from 'shared/hooks/useApi';\nimport { User } from 'shared/types/models';\nimport { useValidState } from 'shared/hooks/useValidState';\n\nimport { Auth } from './types';\n\nexport const AuthContext = React.createContext<Auth | null>(null);\n\nexport const AuthContextProvider: React.FC = ({ children }) => {\n  const api = useApi();\n  const { getToken, setToken, resetToken } = useToken(api.storage);\n  const isMounted = useMountedState();\n  const isLoadingRequired = Boolean(getToken());\n  const [isLoading, setIsLoading] = useValidState(isMounted, isLoadingRequired);\n  const [, setError] = useValidState(isMounted, '');\n  const [user, setUser] = useValidState<User | null>(isMounted, null);\n\n  const refreshTokenInterceptor = async () => {\n    if (getToken()) {\n      try {\n        setIsLoading(true);\n        const tokens = await api.auth.updateTokens();\n        setToken(tokens.accessToken, tokens.refreshToken);\n        const u = await api.auth.signInByToken();\n        setUser(u.data);\n        setError('');\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const setAuth = (u: User, token: string, refreshToken: string) => {\n    setUser(u);\n    setToken(token, refreshToken);\n  };\n\n  const resetAuth = () => {\n    setUser(null);\n    resetToken();\n  };\n\n  useAsync(async () => {\n    api.initAuthInterceptors({ refreshTokenInterceptor });\n    if (!user && getToken()) {\n      try {\n        setIsLoading(true);\n        const u = await api.auth.signInByToken();\n        setUser(u.data);\n        setToken(u.tokens.accessToken, u.tokens.refreshToken);\n        setError('');\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user, setAuth, resetAuth, isLoading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { Storage } from 'services/api/storage';\n\nexport function useToken(storage: Storage) {\n  const getToken = () => storage.get<string, null>('token', null);\n\n  const setToken = (token: string, refreshToken: string) => {\n    storage.set('token', token);\n    storage.set('refreshToken', refreshToken);\n  };\n\n  const resetToken = () => {\n    storage.del('token');\n    storage.del('refreshToken');\n  };\n\n  return {\n    getToken,\n    setToken,\n    resetToken,\n  };\n}\n","import React, { useContext } from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router-dom';\n\nimport { routes } from 'modules/routes';\nimport { AuthContext } from 'services/auth';\n\nexport const PrivateRoute = ({ component, location, ...routeProps }: RouteProps) => {\n  const auth = useContext(AuthContext);\n  const Component = component !== undefined ? component : () => null;\n\n  const renderComponent = () => (\n    <>\n      {auth?.user\n        ? (<Component />)\n        : (<Redirect to={routes.authRoutes.AUTH_ERROR} />)}\n    </>\n  );\n\n  return <Route key={location?.pathname} {...routeProps} render={renderComponent} />;\n};\n","import React from 'react';\nimport { Input, Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport type Props = Input['props'] & {\n  password?: boolean;\n  error?: string;\n};\n\nexport const TextInput = ({ error, password, ...rest }: Props) => (\n  <>\n    {password\n      ? <Input.Password {...rest} />\n      : <Input {...rest} />}\n    {error && <Text type=\"danger\">{error}</Text>}\n  </>\n);\n","import React from 'react';\nimport { Modal as AntModal } from 'antd';\n\ntype ModalProps = {\n  title: string;\n  visible: boolean;\n  children?: React.ReactChild;\n  onOk: () => void;\n  onCancel: () => void;\n};\n\nexport const Modal = ({ title, visible, children, onOk, onCancel }: ModalProps) => (\n  <AntModal\n    title={title}\n    visible={visible}\n    onOk={onOk}\n    onCancel={onCancel}\n  >\n    {children}\n  </AntModal>\n);\n","import React from 'react';\n\nimport { Modal } from 'shared/view/components/Modal/Modal';\n\ntype DeleteConfirmModalProps = {\n  isShowModal: boolean;\n  onDelete: () => void;\n  onCancel: () => void;\n};\n\nexport const DeleteConfirmModal = ({ onDelete, onCancel, isShowModal }: DeleteConfirmModalProps) => (\n  <Modal\n    title=\"Delete user\"\n    visible={isShowModal}\n    onOk={onDelete}\n    onCancel={onCancel}\n  >\n    Are you sure you want to delete this user?\n  </Modal>\n);\n","import React, { useEffect, useCallback } from 'react';\nimport { Table, Typography } from 'antd';\nimport { useHistory } from 'react-router';\nimport { useMountedState } from 'react-use';\n\nimport { useApi } from 'shared/hooks/useApi';\nimport { User } from 'shared/types/models';\nimport { routes } from 'modules/routes';\nimport { useValidState } from 'shared/hooks/useValidState';\nimport { Button } from 'shared/view/components';\n\nimport styles from './ManageUsers.module.scss';\nimport { DeleteConfirmModal } from '../DeleteConfirmModal/DeleteConfirmModal';\n\nconst { Text } = Typography;\n\nexport const ManageUsers = () => {\n  const api = useApi();\n  const history = useHistory();\n  const isMounted = useMountedState();\n  const [isLoading, setIsLoading] = useValidState(isMounted, false);\n  const [error, setError] = useValidState(isMounted, '');\n  const [users, setUsers] = useValidState<User[]>(isMounted, []);\n  const [isShowModal, setSetIsShowModal] = useValidState(isMounted, false);\n  const [userToBeDeleted, setUserToBeDeleted] = useValidState(isMounted, '');\n\n  const openModal = useCallback(() => {\n    setSetIsShowModal(true);\n  }, [setSetIsShowModal]);\n\n  const closeModal = useCallback(() => {\n    setSetIsShowModal(false);\n  }, [setSetIsShowModal]);\n\n  const fetchUsers = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const data = await api.users.getUsers();\n      setUsers(data.map((x, i) => ({\n        ...x,\n        key: i,\n      })));\n      setError('');\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [api.users, setError, setIsLoading, setUsers]);\n\n  const deleteUser = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await api.users.deleteUser(userToBeDeleted);\n      fetchUsers();\n      closeModal();\n      setError('');\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [api.users, closeModal, fetchUsers, setError, setIsLoading, userToBeDeleted]);\n\n  const makeEditUserHandler = (userId: string) => () => {\n    history.push(`${routes.profileRoutes.PROFILE}/${userId}`);\n  };\n\n  const makeDeleteUserHandler = (userId: string) => async () => {\n    setUserToBeDeleted(userId);\n    openModal();\n  };\n\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id',\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  }, {\n    title: 'Surname',\n    dataIndex: 'surname',\n    key: 'surname',\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n  }, {\n    title: 'Actions',\n    dataIndex: '',\n    key: 'x',\n    render: (_: string, record: User) => (\n      <>\n        <Button type=\"link\" onClick={makeEditUserHandler(record.id)}>\n          Edit\n        </Button>\n        <Button type=\"link\" onClick={makeDeleteUserHandler(record.id)}>\n          Delete\n        </Button>\n      </>\n    ),\n  }];\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  return (\n    <div className={styles.UsersWrapper}>\n      <Table dataSource={users} columns={columns} loading={isLoading} bordered />\n      {error && <Text type=\"danger\">{error}</Text>}\n      <DeleteConfirmModal\n        onDelete={deleteUser}\n        onCancel={closeModal}\n        isShowModal={isShowModal}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { FieldRenderProps } from 'react-final-form';\n\nimport { getFieldWithComponent } from 'shared/helpers/getFieldWithComponent';\n\nimport { TextInput, Props } from '../../components';\n\ntype TextInputFieldProps = Props & FieldRenderProps<string | number>;\n\nfunction TextInputFieldComponent(props: TextInputFieldProps) {\n  const { input, meta, ...rest } = props;\n  const error = (meta.touched && rest.error) || (meta.touched && meta.error) ? meta.error : undefined;\n\n  return <TextInput {...input} error={error} {...rest} />;\n}\n\nconst TextInputField = getFieldWithComponent(TextInputFieldComponent);\n\nexport { TextInputField };\n","import React from 'react';\nimport { Field, FieldRenderProps, FieldProps as RFFieldProps } from 'react-final-form';\n\ntype Value = string | number;\ntype BaseWrappedFieldProps = FieldRenderProps<Value, any> & {\n  value?: any;\n};\n\nfunction getFieldWithComponent<P extends BaseWrappedFieldProps>(Component: React.ComponentType<P>, type?: string) {\n  type OwnProps = Omit<P, keyof BaseWrappedFieldProps>;\n  type FieldProps = RFFieldProps<Value, P>;\n  type ResultProps = OwnProps & FieldProps;\n\n  const result = (props: ResultProps) => (\n    <Field type={type} {...props} component={Component} />\n  );\n\n  result.displayName = `FieldWithComponent(${Component.displayName || Component.name || 'Component'})`;\n\n  return result;\n}\n\nexport { getFieldWithComponent };\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { useHistory } from 'react-router';\n\nimport { Message } from 'shared/types/models';\nimport { AuthContext } from 'services/auth';\nimport { routes } from 'modules/routes';\n\nimport styles from './ChatMessage.module.scss';\n\ntype ChatMessageProps = {\n  message: Message;\n};\n\nexport const ChatMessage = ({ message }: ChatMessageProps) => {\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n\n  const onNameClick = () => {\n    history.push(`${routes.profileRoutes.PROFILE}/${message.sender.id}`);\n  };\n\n  return (\n    <div className={cn(styles.Wrapper, { [styles.OwnMessage]: Boolean(message.sender.email === auth?.user?.email) })}>\n      <span className={styles.SenderName} onClick={onNameClick}>{message.sender.name}</span>\n      {message.content}\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport cn from 'classnames';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { useMountedState } from 'react-use';\n\nimport { TextInputField } from 'shared/view/fields';\nimport { useApi } from 'shared/hooks/useApi';\nimport { AuthContext } from 'services/auth';\nimport { MessageResponse } from 'services/api/types/models/message';\nimport { Message } from 'shared/types/models';\nimport { Button } from 'shared/view/components';\nimport { useValidState } from 'shared/hooks/useValidState';\n\nimport styles from './Chat.module.scss';\nimport arrow from './img/arrow.png';\nimport { ChatMessage } from '../ChatMessage/ChatMessage';\n\ntype ChatForm = {\n  message: string;\n  isOpen?: boolean;\n};\n\ntype ChatProps = {\n  isHidden?: boolean;\n};\n\nexport const Chat = ({ isHidden }: ChatProps) => {\n  const api = useApi();\n  const auth = useContext(AuthContext);\n  const isMounted = useMountedState();\n  const [isRollUp, setIsRollUp] = useState(isHidden || false);\n  const [messages, setMessages] = useValidState<Message[]>(isMounted, []);\n\n  const handleFormSubmit = (values: ChatForm) => {\n    auth?.user && api.socket.sendMessage({\n      content: values.message, sender: auth.user,\n    });\n  };\n\n  const onHeaderClick = () => {\n    setIsRollUp(state => !state);\n  };\n\n  useEffect(() => {\n    const observable = api.socket.onMessage();\n    observable.subscribe((m: MessageResponse) => {\n      setMessages(state => [m, ...state]);\n    });\n  }, [api.socket, setMessages]);\n\n  const renderForm = ({ form, handleSubmit }: FormRenderProps<ChatForm>) => {\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n      handleSubmit(event);\n      form.reset();\n    };\n\n    return (\n      <form onSubmit={onSubmit} autoComplete=\"off\">\n        <div\n          className={cn(styles.Content, {\n            [styles.SlideUp]: isRollUp,\n            [styles.SlideDown]: !isRollUp,\n          })}\n        >\n          {auth?.user && (\n            <div className={cn(styles.InputWrapper)}>\n              <TextInputField\n                name=\"message\"\n                placeholder=\"Enter your message\"\n              />\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className={styles.SendButton}\n              >\n                Send\n              </Button>\n            </div>\n          )}\n          <div className={styles.Messages}>\n            {messages.map((x, i) => (\n              <ChatMessage\n                key={`${x.sender.email}_${i}`}\n                message={x}\n              />\n            ))}\n          </div>\n        </div>\n      </form>\n    );\n  };\n\n  return (\n    <div className={styles.Window}>\n      <div className={styles.Header} onClick={onHeaderClick}>\n        <img src={arrow} className={cn(styles.Arrow, { [styles.RotatedArrow]: isRollUp })} alt=\"arrow\" />\n      </div>\n      <Form<ChatForm>\n        onSubmit={handleFormSubmit}\n        render={renderForm}\n        subscription={{}}\n      />\n    </div>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport { ClickParam } from 'antd/lib/menu';\n\nimport { AuthContext } from 'services/auth';\n\nimport { routes } from '../../../routes';\nimport styles from './Header.module.scss';\n\nconst menuItems = [{\n  route: routes.mainRoutes.MAIN, title: 'Main',\n}, {\n  route: routes.userRoutes.USERS, title: 'Users',\n}];\n\nexport const Header = () => {\n  const auth = useContext(AuthContext);\n  const location = useLocation();\n  const [activeTab, setActiveTab] = useState(location.pathname);\n\n  const handleClick = (e: ClickParam) => {\n    setActiveTab(e.key);\n  };\n\n  return (\n    <header>\n      <Menu onClick={handleClick} selectedKeys={[activeTab]} mode=\"horizontal\">\n        {menuItems.map(({ route, title }) => (\n          <Menu.Item key={route}>\n            <Link to={route} key={route}>\n              {title}\n            </Link>\n          </Menu.Item>\n        ))}\n        {auth?.user\n          ? (\n            <Menu.SubMenu\n              title={auth.user.email}\n              key={routes.profileRoutes.PROFILE}\n              className={styles.Button}\n            >\n              <Menu.Item>\n                <Link to={`${routes.profileRoutes.PROFILE}/${auth.user.id}`}>\n                  Profile\n                </Link>\n              </Menu.Item>\n              <Menu.Item>\n                <Link to={routes.authRoutes.LOGOUT}>\n                  Logout\n                </Link>\n              </Menu.Item>\n            </Menu.SubMenu>\n          )\n          : (\n            <Menu.Item key={routes.authRoutes.SIGN_IN} className={styles.Button}>\n              <Link to={routes.authRoutes.SIGN_IN}>\n                Sign In\n              </Link>\n            </Menu.Item>\n          )}\n        {!auth?.user && (\n          <Menu.Item key={routes.authRoutes.SIGN_UP} className={styles.Button}>\n            <Link to={routes.authRoutes.SIGN_UP}>\n              Sign Up\n            </Link>\n          </Menu.Item>\n        )}\n      </Menu>\n    </header>\n  );\n};\n","import React, { ReactChild } from 'react';\n\nimport styles from './Layout.module.scss';\nimport { Header } from './Header/Header';\n\ntype Props = {\n  withFooter: boolean;\n  children: ReactChild | ReactChild[];\n};\n\nexport const Layout = ({ withFooter, children }: Props) => (\n  <div className={styles.Wrapper}>\n    <Header />\n    <main className={styles.Content}>{children}</main>\n    {withFooter && (\n      <footer className={styles.Footer}>clicktronix@hotmail.com</footer>\n    )}\n  </div>\n);\n","import React from 'react';\n\nimport { ManageUsers } from 'features/manageUsers/view/ManageUsers/ManageUsers';\nimport { Chat } from 'features/chat/view/Chat/Chat';\n\nimport { Layout } from '../../shared/Layout/Layout';\n\nexport const UsersLayout = () => (\n  <Layout withFooter>\n    <ManageUsers />\n    <Chat isHidden />\n  </Layout>\n);\n","import * as React from 'react';\n\nimport { Module } from 'shared/types/app';\nimport { PrivateRoute } from 'modules/shared/ProtectedRoute/ProtectedRoute';\n\nimport * as routes from './routes';\nimport { UsersLayout } from './view/UsersLayout';\n\nexport class UsersModule extends Module {\n  public static getRoutes() {\n    return [(\n      <PrivateRoute path={routes.USERS} component={UsersLayout} exact />\n    )];\n  }\n}\n","import React from 'react';\n\nimport { Chat } from 'features/chat/view/Chat/Chat';\n\nimport { Layout } from '../../shared/Layout/Layout';\nimport styles from './MainLayout.module.scss';\n\nexport const MainLayout = () => (\n  <Layout withFooter>\n    <div className={styles.Wrapper}>\n      <h1>Main page</h1>\n      <Chat />\n    </div>\n  </Layout>\n);\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Module } from 'shared/types/app';\n\nimport * as routes from './routes';\nimport { MainLayout } from './view/MainLayout';\n\nexport class MainModule extends Module {\n  public static getRoutes() {\n    return [(\n      <Route path={routes.MAIN} component={MainLayout} exact />\n    )];\n  }\n}\n","export function makeRequired<T>(errorMsg: T) {\n  return (value: string | number) => (!value ? errorMsg : undefined);\n}\n","type Validator = (value: string | number) => string | number | undefined;\n\nexport function composeValidators(...validators: Validator[]) {\n  return (value: string | number) => validators.reduce((error, validator) => error || validator(value), undefined);\n}\n","import React, { useContext } from 'react';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { Form as AntForm, Typography } from 'antd';\nimport { useHistory } from 'react-router';\nimport { useMountedState } from 'react-use';\n\nimport { TextInputField } from 'shared/view/fields';\nimport { Button } from 'shared/view/components';\nimport { composeValidators, makeRequired } from 'shared/validators';\nimport { useApi } from 'shared/hooks/useApi';\nimport { AuthContext } from 'services/auth';\nimport { routes } from 'modules/routes';\nimport { useValidState } from 'shared/hooks/useValidState';\n\nimport styles from './SignInUser.module.scss';\n\nconst { Text } = Typography;\n\ntype SignInForm = {\n  email: string;\n  password: string;\n};\n\nexport const SignIn = () => {\n  const api = useApi();\n  const history = useHistory();\n  const isMounted = useMountedState();\n  const auth = useContext(AuthContext);\n  const [isLoading, setIsLoading] = useValidState(isMounted, false);\n  const [error, setError] = useValidState(isMounted, '');\n\n  const signIn = async (values: SignInForm) => {\n    try {\n      setIsLoading(true);\n      const { data, tokens } = await api.auth.signIn(values);\n      auth?.setAuth(data, tokens.accessToken, tokens.refreshToken);\n      history.push(routes.mainRoutes.MAIN);\n      setError('');\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFormSubmit = (values: SignInForm) => signIn(values);\n\n  const renderForm = ({ handleSubmit }: FormRenderProps<SignInForm>) => (\n    <div className={styles.SignInForm}>\n      <h1>Sign In</h1>\n      <AntForm onFinish={handleSubmit}>\n        <AntForm.Item>\n          <TextInputField\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n            password\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Sign In\n          </Button>\n        </AntForm.Item>\n        {error && <Text type=\"danger\">{error}</Text>}\n      </AntForm>\n    </div>\n  );\n\n  return (\n    <Form<SignInForm>\n      onSubmit={handleFormSubmit}\n      render={renderForm}\n      subscription={{}}\n    />\n  );\n};\n","import React from 'react';\n\nimport { SignIn } from 'features/signInUser/view/SignInUser';\n\nimport { Layout } from '../../../shared/Layout/Layout';\n\nexport const SignInLayout = () => (\n  <Layout withFooter>\n    <SignIn />\n  </Layout>\n);\n","import React from 'react';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { Form as AntForm, Typography } from 'antd';\nimport { useMountedState } from 'react-use';\n\nimport { TextInputField } from 'shared/view/fields';\nimport { Button } from 'shared/view/components';\nimport { composeValidators, makeRequired } from 'shared/validators';\nimport { useApi } from 'shared/hooks/useApi';\nimport { useValidState } from 'shared/hooks/useValidState';\n\nimport styles from './SignUpUser.module.scss';\n\nconst { Text } = Typography;\n\ntype SignUpForm = {\n  name: string;\n  surname: string;\n  email: string;\n  password: string;\n};\n\nexport const SignUp = () => {\n  const api = useApi();\n  const isMounted = useMountedState();\n  const [isLoading, setIsLoading] = useValidState(isMounted, false);\n  const [error, setError] = useValidState(isMounted, '');\n  const [success, setSuccess] = useValidState(isMounted, '');\n\n  const signUp = async (values: SignUpForm) => {\n    try {\n      setIsLoading(true);\n      await api.auth.signUp(values);\n      setSuccess('User successfully registered.');\n      setError('');\n    } catch (e) {\n      setSuccess('');\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleFormSubmit = (values: SignUpForm) => signUp(values);\n\n  const renderForm = ({ handleSubmit }: FormRenderProps<SignUpForm>) => (\n    <div className={styles.SignUpForm}>\n      <h1>Sign Up</h1>\n      <AntForm onFinish={handleSubmit} className={styles.SignInForm}>\n        <AntForm.Item>\n          <TextInputField\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"surname\"\n            placeholder=\"Enter your surname\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"password\"\n            placeholder=\"Enter your password\"\n            validate={composeValidators(\n              makeRequired('Field required'),\n            )}\n            password\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Sign Up\n          </Button>\n        </AntForm.Item>\n        {error && <Text type=\"danger\">{error}</Text>}\n        {success && <Text type=\"secondary\">{success}</Text>}\n      </AntForm>\n    </div>\n  );\n\n  return (\n    <Form<SignUpForm>\n      onSubmit={handleFormSubmit}\n      render={renderForm}\n      subscription={{}}\n    />\n  );\n};\n","import React from 'react';\n\nimport { SignUp } from 'features/signUpUser/view/SignUpUser';\n\nimport { Layout } from '../../../shared/Layout/Layout';\n\nexport const SignUpLayout = () => (\n  <Layout withFooter>\n    <SignUp />\n  </Layout>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { routes } from 'modules/routes';\n\nimport { Layout } from '../../../shared/Layout/Layout';\nimport styles from './UnauthorizedLayout.module.scss';\n\nexport const UnauthorizedLayout = () => (\n  <Layout withFooter>\n    <div className={styles.Wrapper}>\n      Sorry, but you need to\n      {' '}\n      <Link to={routes.authRoutes.SIGN_IN}>sign in</Link>\n      {' '}\n      to view this page.\n    </div>\n  </Layout>\n);\n","import React, { useContext, useCallback, useEffect } from 'react';\nimport { useMountedState } from 'react-use';\nimport { Spin, Typography } from 'antd';\nimport { useHistory } from 'react-router';\n\nimport { AuthContext } from 'services/auth';\nimport { useValidState } from 'shared/hooks/useValidState';\nimport { ApiContext } from 'services/api';\nimport { routes } from 'modules/routes';\n\nimport { Layout } from '../../../shared/Layout/Layout';\nimport styles from './LogoutLayout.module.scss';\n\nexport const Logout = () => {\n  const api = useContext(ApiContext);\n  const auth = useContext(AuthContext);\n  const history = useHistory();\n  const isMounted = useMountedState();\n  const [isLoading, setIsLoading] = useValidState(isMounted, false);\n  const [error, setError] = useValidState(isMounted, '');\n\n  const fetchLogout = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await api?.auth.logout();\n      history.push(routes.mainRoutes.MAIN);\n      auth?.resetAuth();\n      setError('');\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [api, auth, history, setError, setIsLoading]);\n\n  useEffect(() => {\n    fetchLogout();\n  }, [fetchLogout]);\n\n  return (\n    <Layout withFooter>\n      <div className={styles.Wrapper}>\n        {isLoading && <Spin size=\"large\" />}\n        {error && <Typography.Text type=\"danger\">{error}</Typography.Text>}\n      </div>\n    </Layout>\n  );\n};\n","import * as React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport { Module } from 'shared/types/app';\n\nimport * as routes from './routes';\nimport { SignInLayout } from './view/SignInLayout/SignInLayout';\nimport { SignUpLayout } from './view/SignUpLayout/SignUpLayout';\nimport { UnauthorizedLayout } from './view/UnauthorizedLayout/UnauthorizedLayout';\nimport { Logout } from './view/LogoutLayout/LogoutLayout';\n\nexport class AuthModule extends Module {\n  public static getRoutes() {\n    return [\n      (\n        <Route exact key={routes.SIGN_IN} path={routes.SIGN_IN} component={SignInLayout} />\n      ),\n      (\n        <Route exact key={routes.SIGN_UP} path={routes.SIGN_UP} component={SignUpLayout} />\n      ),\n      (\n        <Route exact key={routes.AUTH_ERROR} path={routes.AUTH_ERROR} component={UnauthorizedLayout} />\n      ),\n      (\n        <Route exact key={routes.LOGOUT} path={routes.LOGOUT} component={Logout} />\n      ),\n    ];\n  }\n}\n","import React, { useContext, useEffect, useCallback } from 'react';\nimport { Form, FormRenderProps } from 'react-final-form';\nimport { Form as AntForm, Typography } from 'antd';\nimport { useParams } from 'react-router';\nimport { useMountedState } from 'react-use';\n\nimport { AuthContext } from 'services/auth';\nimport { TextInputField } from 'shared/view/fields';\nimport { Button } from 'shared/view/components';\nimport { useApi } from 'shared/hooks/useApi';\nimport { UpdateUser } from 'shared/types/models';\nimport { useValidState } from 'shared/hooks/useValidState';\n\nimport styles from './Profile.module.scss';\n\ntype ProfileForm = {\n  name: string;\n  surname: string;\n  email: string;\n  password: string;\n  newPassword: string;\n};\n\nconst { Text } = Typography;\n\nexport const Profile = () => {\n  const initialUser = {\n    name: '',\n    surname: '',\n    email: '',\n    password: '',\n    newPassword: '',\n  };\n  const api = useApi();\n  const auth = useContext(AuthContext);\n  const { userId } = useParams();\n  const isMounted = useMountedState();\n  const [error, setError] = useValidState(isMounted, '');\n  const [user, setUser] = useValidState<UpdateUser>(isMounted, initialUser);\n  const [isLoading, setIsLoading] = useValidState(isMounted, false);\n  const isOwnProfile = userId === auth?.user?.id;\n\n  const fetchUserProfile = useCallback(async () => {\n    if (userId) {\n      try {\n        setIsLoading(true);\n        const usr = await api.users.getUser(userId);\n        setUser(state => ({\n          ...state, ...usr,\n        }));\n        setError('');\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  }, [api.users, setError, setIsLoading, setUser, userId]);\n\n  const updateProfile = async (values: ProfileForm) => {\n    try {\n      setIsLoading(true);\n      userId && await api.users.updateUser(userId, {\n        ...values, id: userId,\n      });\n      setError('');\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, [fetchUserProfile]);\n\n  const handleFormSubmit = (values: ProfileForm) => updateProfile(values);\n\n  const renderForm = ({ handleSubmit }: FormRenderProps<ProfileForm>) => (\n    <div className={styles.ProfileForm}>\n      <h1>\n        Edit\n        {' '}\n        {user?.name}\n        {'\\'s '}\n        profile\n      </h1>\n      <AntForm onFinish={handleSubmit}>\n        <AntForm.Item>\n          <TextInputField\n            name=\"name\"\n            placeholder=\"Enter your name\"\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"surname\"\n            placeholder=\"Enter your surname\"\n          />\n        </AntForm.Item>\n        <AntForm.Item>\n          <TextInputField\n            name=\"email\"\n            placeholder=\"Enter your email\"\n          />\n        </AntForm.Item>\n        {isOwnProfile && (\n          <>\n            <AntForm.Item>\n              <TextInputField\n                name=\"password\"\n                placeholder=\"Enter your current password\"\n                password\n              />\n            </AntForm.Item>\n            <AntForm.Item>\n              <TextInputField\n                name=\"newPassword\"\n                placeholder=\"Enter your new password\"\n                password\n              />\n            </AntForm.Item>\n          </>\n        )}\n        <AntForm.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Save\n          </Button>\n        </AntForm.Item>\n        {error && <Text type=\"danger\">{error}</Text>}\n      </AntForm>\n    </div>\n  );\n\n  return (\n    <Form<ProfileForm>\n      onSubmit={handleFormSubmit}\n      render={renderForm}\n      initialValues={user}\n      subscription={{}}\n    />\n  );\n};\n","import React from 'react';\n\nimport { Profile } from 'features/profile/view/Profile';\n\nimport { Layout } from '../../shared/Layout/Layout';\n\nexport const ProfileLayout = () => (\n  <Layout withFooter>\n    <Profile />\n  </Layout>\n);\n","import * as React from 'react';\n\nimport { Module } from 'shared/types/app';\nimport { PrivateRoute } from 'modules/shared/ProtectedRoute/ProtectedRoute';\n\nimport * as routes from './routes';\nimport { ProfileLayout } from './view/ProfileLayout';\n\nexport class ProfileModule extends Module {\n  public static getRoutes() {\n    return [(\n      <PrivateRoute path={`${routes.PROFILE}/:userId`} component={ProfileLayout} exact />\n    )];\n  }\n}\n","import React from 'react';\nimport ErrorBoundary from 'antd/lib/alert/ErrorBoundary';\nimport 'antd/dist/antd.css';\n\nimport { ApiContextProvider } from 'services/api';\nimport { AuthContextProvider } from 'services/auth';\n\nconst App: React.FC = ({ children }) => (\n  <ErrorBoundary>\n    <ApiContextProvider>\n      <AuthContextProvider>\n        {children}\n      </AuthContextProvider>\n    </ApiContextProvider>\n  </ErrorBoundary>\n);\n\nexport { App };\n","import React, { useContext } from 'react';\nimport { Spin } from 'antd';\n\nimport { AuthContext } from 'services/auth';\n\nimport { Layout } from '../Layout/Layout';\nimport styles from './AuthChecker.module.scss';\n\nexport const AuthChecker: React.FC = ({ children }) => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <>\n      {auth?.isLoading\n        ? (\n          <Layout withFooter>\n            <div className={styles.Wrapper}>\n              <Spin size=\"large\" />\n            </div>\n          </Layout>\n        )\n        : children}\n    </>\n  );\n};\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n  // [::1] is the IPv6 localhost address.\n  || window.location.hostname === '[::1]'\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n            + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, { headers: { 'Service-Worker': 'script' } })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Core } from 'core/Core';\nimport * as serviceWorker from 'core/configureServiceWorker';\nimport 'shared/styles/main.scss';\n\nReactDOM.render(<Core />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport * as modules from 'modules';\nimport { routes } from 'modules/routes';\nimport { App } from 'core/App';\nimport { AuthChecker } from 'modules/shared/AuthChecker/AuthChecker';\n\nexport const Core = () => (\n  <BrowserRouter>\n    <App>\n      <AuthChecker>\n        <Route path=\"/\">\n          <Switch>\n            {Object.values(modules).map(x => x.getRoutes())}\n            <Redirect to={routes.mainRoutes.MAIN} />\n          </Switch>\n        </Route>\n      </AuthChecker>\n    </App>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}